@import url('https://fonts.googleapis.com/css2?family=Lato&display=swap');

html, body {
   --cell-border-size: 1px;
   --cell-border-colour: rgb(33, 77, 40);

   padding: 0;
   margin: 0;
}

.hidden {
   display: none !important;
}

#creature-tracker {
   background-color: #eee;
   border-bottom: 2px solid #000;
   border-left: 2px solid #000;
   position: absolute;
   top: 0;
   right: 0;
   z-index: 2;
}

#control-panel {
   min-width: 10rem;
   background-color: #ddd;
   border-top: 2px solid #000;
   border-right: 2px solid #000;
   position: absolute;
   bottom: 0;
   left: 0;
   z-index: 2;
}
#control-panel button {
   font-family: "Lato";
   margin: 1rem 0 1rem 0.5rem;
}

#creature-count {
   text-align: center;
   font-family: "Lato";
   font-size: 2rem;
}
#average-creature-count {
   text-align: center;
   font-family: "Lato";
   font-size: 1.6rem;
}

#cell-container {
   border: 2px solid #000;
   position: absolute;
   top: 50%;
   left: 50%;
   transform: translate(-50%, -50%);
   overflow: hidden;
   z-index: 1;
}
.cell-row {
   width: 100%;
   height: var(--cell-size);
}
.cell {
   width: var(--cell-size);
   height: var(--cell-size);
   display: inline-block;
   box-shadow: 0 0 0 calc(var(--cell-border-size) / 2) var(--cell-border-colour) inset;
}
.cell-1 {
   background-color: rgb(130, 214, 119);
}
.cell-2 {
   background-color: rgb(80, 199, 64);
}

.fruit {
   background-color: rgb(255, 0, 76);
   border-radius: 100%;
   position: absolute;
   transform: translate(-50%, -50%);
}
.creature {
   background-color: green;
   border-radius: 100%;
   position: absolute;
   transform: translate(-50%, -50%);
   z-index: 2;
   box-shadow: 0 0 1px 3px #000;
   cursor: pointer;
}
.creature.is-reproducing {
   box-shadow: 0 0 1px 3px rgb(255, 0, 200);
}

.creature :is(.life, .reproductive-urge) {
   height: 10px;
   width: 50px;
   background-color: #fff;
   border: 2px solid #000;
   position: absolute;
   left: 50%;
   transform: translate(-50%, -100%);
   z-index: 2;
   pointer-events: none;
}
.creature .life {
   top: -2px;
}
.creature .reproductive-urge {
   top: -15px;
}
.creature :is(.life-bar, .reproductive-urge-bar) {
   height: 10px;
}
.creature .reproductive-urge-bar {
   background-color: rgb(255, 0, 212);
}

.creature::after {
   content: "";
   width: calc(var(--vision-size) * 2);
   height: calc(var(--vision-size) * 2);
   background-color: rgba(0, 0, 0, 0.15);
   border-radius: 100%;
   position: absolute;
   top: 50%;
   left: 50%;
   transform: translate(-50%, -50%);;
   z-index: 1;
}

#graph-container {
   background-color: #ccc;
   border-top: 2px solid #000;
   border-left: 2px solid #000;
   position: absolute;
   right: 0;
   bottom: 0;
   z-index: 2;
}

.graph {
   --point-size: 3px;

   background-color: #fff;
   border: 2px solid #000;
   margin: 10px 20px 30px 30px;
   position: relative;
}
.graph .title {
   position: absolute;
   left: 50%;
   top: 0;
   transform: translate(-50%, -100%);
}
.graph .axis-label {
   font-size: 0.95rem;
   position: absolute;
}
.graph .left-axis-label {
   transform: translate(-100%, 50%);
   left: -5px;
}
.graph .bottom-axis-label {
   transform: translate(-50%, 100%);
   bottom: -5px;
}
.graph .data-point {
   width: var(--point-size);
   height: var(--point-size);
   background-color: #000;
   border-radius: 100%;
   position: absolute;
   z-index: 2;
}
.graph .connecting-line {
   height: 2px;
   background-color: red;
   margin-top: calc(var(--point-size) / 2);
   margin-right: calc(var(--point-size) / 2);
   transform-origin: top left;
   position: absolute;
   z-index: 1;
}